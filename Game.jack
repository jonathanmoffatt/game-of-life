class Game {
    field Array currentIteration, nextIteration;

    constructor Game new() {
        return this;
    }

    method void dispose() {
        do ArrayHelper.cleanUp(currentIteration);
        do Memory.deAlloc(this);
        return;
    }

    method void run() {
        var char key;
        var boolean quit;

        do Menu.showMainMenu();
        do Grid.draw();
        let currentIteration = ArrayHelper.getEmptyGrid();
        do Examples.buildStillLifes(currentIteration, 1);
        do Grid.fillFromArray(currentIteration);

        let quit = false;
        while (~quit) {
            let key = Game.waitForKeyPressed();
            if (key = 81) { let quit = true; }     // q key
            do Game.waitForKeyReleased(key);
        }

        do Menu.showFarewellMessage();
        return;
    }

    function char waitForKeyPressed() {
        var char key;
        let key = 0;
        while (key = 0) {
            let key = Keyboard.keyPressed();
        }
        return key;
    }

    function void waitForKeyReleased(char key) {
        while (~(key = 0)) {
            let key = Keyboard.keyPressed();
        }
        return;
    }
}