class Grid {
    function void draw() {
        var int y, i, x, address, pattern;
        let y = 0;
        let i = 0;
        while (y < 256) {
            let address = 16384 + (y * 32) + 16;
            if (i = 0) {
                let pattern = -21846; // dotted line for tops and bottoms of cells
            } else {
                let pattern = 257; // left and right sides of cell
            }
            let x = 0;
            while (x < 16) {
                do Memory.poke(address + x, pattern);
                let x = x + 1;
            }
            let y = y + 2;
            let i = i + 1;
            if (i = 4) {
                let i = 0;
            }
        }
        return;
    }

    function void fillFromArray(Array cells) {
        var int x, y;
        var Array row;
        let y = 0;
        while (y < 32) {
            let row = cells[y];
            let x = 0;
            while (x < 32) {
                do Grid.fill(x, y, row[x]);
                let x = x + 1;
            }
            let y = y + 1;
        }
        return;
    }

    function void fill(int x, int y, boolean color) {
        var int x1, y1;
        let x1 = 257 + (x * 8);
        let y1 = 1 + (y * 8);
        do Screen.setColor(color);
        do Screen.drawRectangle(x1, y1, x1 + 6, y1 + 6);
        return;
    }

    function void drawCursor(int x, int y, boolean color) {
        var int x1, y1;
        let x1 = 259 + (x * 8);
        let y1 = 3 + (y * 8);
        do Screen.setColor(color);
        do Screen.drawRectangle(x1, y1, x1 + 2, y1 + 2);
        return;
    }
}