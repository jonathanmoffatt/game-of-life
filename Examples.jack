class Examples {
    function void buildStillLifes(Lifecycle lifecycle, int row) {
        // block
        do lifecycle.setCells(7, row + 1, "xx");
        do lifecycle.setCells(7, row + 2, "xx");

        // bee hive
        do lifecycle.setCells(14, row + 0, "-xx-");
        do lifecycle.setCells(14, row + 1, "x--x");
        do lifecycle.setCells(14, row + 2, "-xx-");

        // loaf
        do lifecycle.setCells(22, row + 0, "-xx-");
        do lifecycle.setCells(22, row + 1, "x--x");
        do lifecycle.setCells(22, row + 2, "-x-x");
        do lifecycle.setCells(22, row + 3, "--x-");

        let row = row + 8;

        // boat
        do lifecycle.setCells(10, row + 0, "xx--");
        do lifecycle.setCells(10, row + 1, "x-x-");
        do lifecycle.setCells(10, row + 2, "-x--");

        // tub
        do lifecycle.setCells(19, row + 0, "-x--");
        do lifecycle.setCells(19, row + 1, "x-x-");
        do lifecycle.setCells(19, row + 2, "-x--");

        return;
    }

    function void buildOscillators(Lifecycle lifecycle) {
        var int row;

        let row = 5;

        // blinker
        do lifecycle.setCells(8, row + 0, "x");
        do lifecycle.setCells(8, row + 1, "x");
        do lifecycle.setCells(8, row + 2, "x");

        // toad
        do lifecycle.setCells(14, row + 0, "-xxx");
        do lifecycle.setCells(14, row + 1, "xxx-");

        // beacon
        do lifecycle.setCells(22, row + 0, "xx--");
        do lifecycle.setCells(22, row + 1, "xx--");
        do lifecycle.setCells(22, row + 2, "--xx");
        do lifecycle.setCells(22, row + 3, "--xx");

        let row = 17;

        // penta-decathalon
        do lifecycle.setCells(5, row + 0, "xxx");
        do lifecycle.setCells(5, row + 1, "x-x");
        do lifecycle.setCells(5, row + 2, "xxx");
        do lifecycle.setCells(5, row + 3, "xxx");
        do lifecycle.setCells(5, row + 4, "xxx");
        do lifecycle.setCells(5, row + 5, "xxx");
        do lifecycle.setCells(5, row + 6, "x-x");
        do lifecycle.setCells(5, row + 7, "xxx");

        // pulsar
        let row = row - 3;
        do lifecycle.setCells(15, row + 0, "--xxx---xxx--");
        do lifecycle.setCells(15, row + 1, "-------------");
        do lifecycle.setCells(15, row + 2, "x----x-x----x");
        do lifecycle.setCells(15, row + 3, "x----x-x----x");
        do lifecycle.setCells(15, row + 4, "x----x-x----x");
        do lifecycle.setCells(15, row + 5, "--xxx---xxx--");
        do lifecycle.setCells(15, row + 6, "-------------");
        do lifecycle.setCells(15, row + 7, "--xxx---xxx--");
        do lifecycle.setCells(15, row + 8, "x----x-x----x");
        do lifecycle.setCells(15, row + 9, "x----x-x----x");
        do lifecycle.setCells(15, row + 10,"x----x-x----x");
        do lifecycle.setCells(15, row + 11,"-------------");
        do lifecycle.setCells(15, row + 12,"--xxx---xxx--");

        return;
    }

    function void addLightWeightSpaceship(Lifecycle lifecycle) {
        do lifecycle.setCells(8, 3, "--xx-");
        do lifecycle.setCells(8, 4, "xx-xx");
        do lifecycle.setCells(8, 5, "xxxx-");
        do lifecycle.setCells(8, 6, "-xx--");
        return;
    }

    function void addMiddleWeightSpaceship(Lifecycle lifecycle) {
        do lifecycle.setCells(8, 10, "--x---");
        do lifecycle.setCells(8, 11, "x---x-");
        do lifecycle.setCells(8, 12, "-----x");
        do lifecycle.setCells(8, 13, "x----x");
        do lifecycle.setCells(8, 14, "-xxxxx");
        return;
    }

    function void addHeavyWeightSpaceship(Lifecycle lifecycle) {
        do lifecycle.setCells(7, 20, "-xxxx--");
        do lifecycle.setCells(7, 21, "xxxxxx-");
        do lifecycle.setCells(7, 22, "xxxx-xx");
        do lifecycle.setCells(7, 23, "----xx-");
        return;
    }
}